//	Process Control
//  ---------------
//  Find all LoadLibrary and LoadModule affected from user input and stored data
//  Find parameters of given methods that are not defined
///////////////////////////////////////////////////////////////////////

// Finds relevant Methods that are influenced by inputs
CxList relevantMethods = Find_LoadLibrary();

CxList inputs = Find_Interactive_Inputs();

CxList methodsInfluenced = relevantMethods.DataInfluencedBy(inputs);

// For the remaining Methods find those that don't have the path fully specified
CxList relevantMethodsNotFound = relevantMethods - methodsInfluenced;
CxList relevantMethodsParams = All.GetParameters(relevantMethodsNotFound); 

CxList strings = Find_Strings();

//Checks for absolute path, if C:[\/] isn't included at the begining we can assume that
//it's not an absolute path
CxList fullPathStrings = strings.FindByShortNames(new List<string>{"C:/*","C:\\*","/*"}, false);
CxList vulnStrings = strings - fullPathStrings;

CxList methods = Find_Methods();

CxList appendMethods = methods.FindByShortName("append");

CxList binaryExpressions = base.Find_BinaryExpr();


/*

	Get the right side expression of additions

*/

CxList RightPlusExpression = All.NewCxList();

foreach(CxList binaryExpression in binaryExpressions){

	BinaryExpr binaryExpr = binaryExpression.TryGetCSharpGraph<BinaryExpr>();

	if(binaryExpr.Operator == BinaryOperator.Add){

		RightPlusExpression.Add(All.FindById(binaryExpr.Right.NodeId));

	}

}

// Find the '+=' operators
CxList strLiterals = Find_Strings();

CxList assignments = Find_AssignExpr();

CxList assignAdd = All.NewCxList();

foreach(CxList assignment in assignments)

{

	try

	{

		AssignExpr graph = assignment.TryGetCSharpGraph<AssignExpr>();

		if(graph != null && graph.Operator == AssignOperator.AdditionAssign){
			
			CxList str = strLiterals.FindByAssignmentSide(CxList.AssignmentSide.Right).GetByAncs(assignment);

			assignAdd.Add(str);	
			
		}

	}

	catch(Exception ex)

	{

		cxLog.WriteDebugMessage(ex);

	}

}

CxList sanitizers = All.NewCxList();

sanitizers.Add(appendMethods);
sanitizers.Add(RightPlusExpression);
sanitizers.Add(assignAdd);


CxList notFullPathVulnMethods = relevantMethodsNotFound.InfluencedByAndNotSanitized(vulnStrings, sanitizers);

methodsInfluenced.Add(notFullPathVulnMethods);
result = methodsInfluenced;